#!/usr/bin/env node

const fs = require("fs");
const path = require("path");
const chalk = require("chalk");
const { evaluate } = require("../src/evaluate");
const { print } = require("../src/stdlib/io");

const version = JSON.parse(
  fs.readFileSync(path.join(__dirname, "../package.json"), "utf-8"),
).version;

const run = (argv) => {
  const fileName = argv[2];
  let validExtensions = /\.arith$/g;
  if (validExtensions.test(fileName)) {
    const input = fs.readFileSync(fileName, "utf-8");
    print(evaluate(input));
    process.exit();
  }
  const [command, ...args] = argv.slice(2);
  if (!command || command === "i") {
    const { initializeRepl } = require("../src/repl");
    console.log(
      chalk.cyan(
        "Welcome to Arith - a simple, Lisp-like programming language.\nType .help for help, .editor to enter multi-line mode, .exit to exit\n",
      ),
    );
    initializeRepl();
  } else {
    switch (command.toLowerCase()) {
      case "eval":
        const input = args[0].trim();
        print(evaluate(input));
        break;
      case "help":
        console.log(
          chalk.cyan(
            "Welcome to Arith - a simple, Lisp-like programming language.\n",
          ),
        );
        console.log(`You are using Arith ${version}`);
        console.log(chalk.blue("Here are the valid commands:\n"));
        console.log("COMMAND", "\t\t\t\tDESCRIPTION");
        console.log(
          "<none>, i",
          "\t\t\t\tOpen the interpreter in interactive/REPL mode",
        );
        console.log("eval", "\t\t\t\t\tEvaluate an expression");
        console.log("help", "\t\t\t\t\tPrint this help message");
        console.log(
          "version",
          "\t\t\t\tPrint the version of Arith you're using",
        );
        console.log(
          "<filename> or run <filename>",
          "\t\tExecute the contents of a valid Arith file",
        );
        console.log(); // blank line
        console.log(
          chalk.cyan(
            "Use the command 'arc <file>' to transpile its contents to JavaScript.\n",
          ),
        );
        console.log("Enjoy!");
        break;
      case ".help":
        console.log(
          chalk.cyan(
            "Welcome to Arith - a simple, Lisp-like programming language.\n",
          ),
        );
        console.log(`You are using Arith ${version}`);
        console.log(chalk.blue("Here are the valid commands:\n"));
        console.log("COMMAND", "\t\t\t\tDESCRIPTION");
        console.log(
          "<none>, i",
          "\t\t\t\tOpen the interpreter in interactive/REPL mode",
        );
        console.log("help", "\t\t\t\t\tPrint this help message");
        console.log(
          "version",
          "\t\t\t\tPrint the version of Arith you're using",
        );
        console.log(
          "<filename> or run <filename>",
          "\t\tExecute the contents of a valid Arith file",
        );
        console.log(); // blank line
        console.log(
          chalk.cyan(
            "Use the command 'arc <file>' to transpile its contents to JavaScript.\n",
          ),
        );
        console.log("Enjoy!");
        break;
      case "version":
        console.log(`Arith ${version}`);
        break;
      case ".version":
        console.log(`Arith ${version}`);
        break;
      case "run":
        const fileInput = fs.readFileSync(args[0], "utf-8");
        print(evaluate(fileInput));
        break;
      default:
        process.exit(0);
    }
    process.exit(0);
  }
};

run(process.argv);
